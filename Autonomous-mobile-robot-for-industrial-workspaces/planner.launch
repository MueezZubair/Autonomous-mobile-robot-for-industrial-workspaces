  <launch>

  <!--node pkg ="tf" type="static_transform_publisher" name="odom_to_base_link2" args="0.0 0.0 0.0 0.0 0.0 0.0 /odom /base_footprint 1000000"/-->

    
  <!--node pkg ="tf" type="static_transform_publisher" name="odom_to_base_link1" args="0.0 0.0 0.0 0.0 0.0 0.0 /map /odom 40"/-->    
    
   <!--node pkg ="tf" type="static_transform_publisher" name="odom_to_base_link3" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_footprint /camera_link 40"/--> 
   
   
   <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="115200"/>
  </node>

       <node pkg ="tf" type="static_transform_publisher" name="camera_to_base_link" args="0.18 0.0 0.3 0.0 0.0 0.0  /base_footprint camera_link 40"/>
    <!--node pkg ="tf" type="static_transform_publisher" name="camera_to_base_link" args="0.0 0.0 0.0 0.0 0.0 0.0  /base_footprint camera_link 40"/-->
    
  
  <group ns="/camera" >
      
      <node pkg="nodelet" type="nodelet" name="camera_nodelet"  args="manager"/>

      <!-- Generate a point cloud from the disparity image -->
      <node pkg="nodelet" type="nodelet" name="disparity2cloud" args="load rtabmap_ros/point_cloud_xyz camera_nodelet">
         <remap from="depth/image"       to="/camera/depth_registered/image_raw"/>
         <remap from="depth/camera_info" to="/camera/depth_registered/camera_info"/>
         <remap from="cloud"                to="cloudXYZ"/>
         
         <param name="voxel_size" type="double" value="0.05"/>
         <param name="decimation" type="int" value="4"/>
         <param name="max_depth" type="double" value="4"/>
      </node>

      <!-- Create point cloud for the local planner -->
      <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection camera_nodelet">
         <remap from="cloud" to="cloudXYZ"/>
         <remap from="obstacles" to="/planner_cloud"/>
         <param name="use_sim_time" type="bool" value="true"/>
	 <param name="wait_for_transform" type="bool" value="true"/>
         <param name="frame_id" type="string" value="base_footprint"/>
         <param name="map_frame_id" type="string" value="map"/>
         <param name="Grid/MinClusterSize" type="int" value="20"/>
         <param name="Grid/MaxObstacleHeight" type="double" value="0.0"/>
       </node>
   </group>

  <!-- Arguments -->
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="/rtabmap/odom" />
  <arg name="move_forward_only" default="false"/>

  <!-- move_base -->
  

      <remap from="openni_points" to="/planner_cloud"/>
      <remap from="map" to="/rtabmap/proj_map"/>
      
      <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    	<remap from="odom" to="$(arg odom_topic)"/>
    	
        
      <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <!--param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" /-->
       <rosparam file="$(find rtabmap_ros)/launch/config/planner_param/costmap_common_params.yaml" command="load" ns="global_costmap" />
      	<rosparam file="$(find rtabmap_ros)/launch/config/planner_param/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find rtabmap_ros)/launch/config/planner_param/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find rtabmap_ros)/launch/config/planner_param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find rtabmap_ros)/launch/config/planner_param/base_local_planner_params.yaml" command="load" />
        <param name = "controller_frequency" value = "10.0"/>
        <param name = "controller_patiente" value = "15.0"/>
      </node>
  
</launch>
